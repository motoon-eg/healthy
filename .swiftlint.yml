# paths to ignore during linting. Takes precedence over `included`.
excluded:
  - Templates
  - Healthy/Resources/Generated/
  
# Some rules are turned off by default, so we need to opt-in
opt_in_rules:
  # Prefer checking isEmpty over comparing count to zero
  - empty_count
  
  # Force casts should be avoided
  - force_cast
  
  # Force unwrapping should be avoided
  - force_unwrapping
  
  # Header comments should be consistent with project patterns.
  - file_header
  
  # MARK comment should be in valid format. e.g. ‘// MARK: …’ or ‘// MARK: - …’
  - mark
  
  # Function parameters should be aligned vertically if they’re in multiple lines in a method call
  - vertical_parameter_alignment_on_call
  
  # Use shorthand syntax for optional binding
  - shorthand_optional_binding

  - custom_rules

# By default, SwiftLint uses a set of sensible default rules you can adjust:
disabled_rules: # rule identifiers turned on by default to exclude from running
  # TODOs and FIXMEs should be resolved.
  - todo

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning

force_unwrapping: error

force_try:
  severity: error

line_length: 120

type_body_length:
  - 300 # warning
  - 400 # error

# or they can set both explicitly
file_length:
  error: 400
  
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  allowed_symbols: ["_"] # these are allowed in type names
  
identifier_name:
  excluded: # excluded via string array
    - id
    - URL
    - GlobalAPIKey

file_header:
  forbidden_string: "Created by"

custom_rules:
  no_lines_around_braces:
    name: "No lines before or after closing curly braces"
    regex: "(\\s*{[^\\n]*)\\s*\\n{2,}(\\s*\\n)*\\s*([^\\n]*\\n\\s*})"
    message: "Don't leave lines before or after closing curly braces"
    severity: warning # or error
    correction: "$1\n$4"
